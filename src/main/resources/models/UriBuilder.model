/*
 * Copyright (C) 2015 The Pennsylvania State University and the University of Wisconsin
 * Systems and Internet Infrastructure Security Laboratory
 *
 * Author: Damien Octeau
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


class android.net.Uri$Builder {
  String scheme;
  String ssp;
  String fragment;
  String uri;
  String path;
  String uriQuery;
  String authority;
  Set<String> appendedPaths;
  Set<String> appendedQueries;


  copy <android.content.ContentUris: android.net.Uri$Builder appendId(android.net.Uri$Builder,long)> {
    0;
    1: replaceAll appendedPaths, type int;
  }

  mod <android.net.Uri$Builder: void <init>()> {}
  argument appendedPaths0 = 0: add appendedPaths;
  mod <android.net.Uri$Builder: android.net.Uri$Builder appendEncodedPath(java.lang.String)> {
    argument appendedPaths0;
  }
  mod <android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)> {
    argument appendedPaths0;
  }
  mod <android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)> {
    0: add appendedQueries;
    1: add appendedQueries;
  }
  argument authority0 = 0: replace authority;
  mod <android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)> {
    argument authority0;
  }
  mod <android.net.Uri$Builder: android.net.Uri$Builder clearQuery()> {
    null uriQuery;
    clear appendedQueries;
  }
  mod <android.net.Uri$Builder: android.net.Uri$Builder encodedAuthority(java.lang.String)> {
    argument authority0;
  }
  argument fragment0 = 0: replace fragment;
  mod <android.net.Uri$Builder: android.net.Uri$Builder encodedFragment(java.lang.String)> {
    argument fragment0;
  }
  argument ssp0 = 0: replace ssp;
  mod <android.net.Uri$Builder: android.net.Uri$Builder encodedOpaquePart(java.lang.String)> {
    argument ssp0;
  }
  argument path0 = 0: replace path;
  argument clearAppendedPaths = clear appendedPaths;
  mod <android.net.Uri$Builder: android.net.Uri$Builder encodedPath(java.lang.String)> {
    argument path0;
    argument clearAppendedPaths;
  }
  argument uriQuery0 = 0: replace uriQuery;
  argument clearAppendedQueries = clear appendedQueries;
  mod <android.net.Uri$Builder: android.net.Uri$Builder encodedQuery(java.lang.String)> {
    argument uriQuery0;
    argument clearAppendedQueries;
  }
  mod <android.net.Uri$Builder: android.net.Uri$Builder fragment(java.lang.String)> {
    argument fragment0;
  }
  mod <android.net.Uri$Builder: android.net.Uri$Builder opaquePart(java.lang.String)> {
    argument ssp0;
  }
  mod <android.net.Uri$Builder: android.net.Uri$Builder path(java.lang.String)> {
    argument path0;
    argument clearAppendedPaths;
  }
  mod <android.net.Uri$Builder: android.net.Uri$Builder query(java.lang.String)> {
    argument uriQuery0;
    argument clearAppendedQueries;
  }
  mod <android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)> {
    0: replace scheme;
  }

  mod copy <android.net.Uri$Builder: android.net.Uri build()> {}
}

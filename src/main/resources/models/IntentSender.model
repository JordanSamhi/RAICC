/*
 * Copyright (C) 2020 Jordan Samhi
 * University of Luxembourg - Interdisciplinary Centre for
 * Security Reliability and Trust (SnT) - TruX -
 * All rights reserved
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 2.1 of the
 * License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Lesser Public License for more details.
 * 
 * You should have received a copy of the GNU General Lesser Public
 * License along with this program.  If not, see
 * <http://www.gnu.org/licenses/lgpl-2.1.html>.
 */

class android.content.IntentSender {
  String targetType(1);
  String creatorPackage(1);
  String action(1);
  Set<String> categories;
  String package(1);
  String clazz(1);
  Set<int> flags;
  Set<String> extras;
  String dataType;

  String scheme;
  String ssp;
  String fragment;
  String uri;
  String path;
  String uriQuery;
  String authority;
  Set<String> appendedPaths;
  Set<String> appendedQueries;
  
  
  mod gen <android.app.PendingIntent: android.content.IntentSender getIntentSender(android.app.PendingIntent)> {   
    0: replace targetType, type android.app.PendingIntent:targetType;
    0: replace creatorPackage, type android.app.PendingIntent:creatorPackage;
    0: replace action, type android.app.PendingIntent:action;
    0: replaceAll categories, type android.app.PendingIntent:categories;
    0: replace package, type android.app.PendingIntent:package;
    0: replace clazz, type android.app.PendingIntent:clazz;
    0: replaceAll flags, type android.app.PendingIntent:flags;
    0: replaceAll extras, type android.app.PendingIntent:extras;
    0: replace dataType, type android.app.PendingIntent:dataType;
    0: replace scheme, type android.app.PendingIntent:scheme;
    0: replace ssp, type android.app.PendingIntent:ssp;
    0: replace fragment, type android.app.PendingIntent:fragment;
    0: replace uri, type android.app.PendingIntent:uri;
    0: replace path, type android.app.PendingIntent:path;
    0: replace uriQuery, type android.app.PendingIntent:uriQuery;
    0: replace authority, type android.app.PendingIntent:authority;
    0: replaceAll appendedPaths, type android.app.PendingIntent:appendedPaths;
    0: replaceAll appendedQueries, type android.app.PendingIntent:appendedQueries;
  }
  
  argument intentSender0 = 0: type android.content.IntentSender, prop "valueType": "intentSender";
  argument intentSenderBase = -1: type android.content.IntentSender, prop "valueType": "intentSender";
  
  query <android.content.IntentSender$OnFinished: void onSendFinished(android.content.IntentSender,android.content.Intent,int,java.lang.String,android.os.Bundle)> {
    argument intentSender0;
  }
  
  query <android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender$OnFinished,android.os.Handler)> {
    argument intentSenderBase;
  }
  
  query <android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender$OnFinished,android.os.Handler,java.lang.String)> {
    argument intentSenderBase;
  }
}